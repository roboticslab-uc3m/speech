/*
 * SPDX-FileCopyrightText: 2023-2023 Istituto Italiano di Tecnologia (IIT)
 * SPDX-License-Identifier: LGPL-2.1-or-later
 */


// Generated by yarpDeviceParamParserGenerator (1.0)
// This is an automatically generated file. Please do not edit it.
// It will be re-generated if the cmake flag ALLOW_DEVICE_PARAM_PARSER_GERNERATION is ON.

// Generated on: Fri May  2 22:04:10 2025


#ifndef VOSKTRANSCRIPTION_PARAMSPARSER_H
#define VOSKTRANSCRIPTION_PARAMSPARSER_H

#include <yarp/os/Searchable.h>
#include <yarp/dev/IDeviceDriverParams.h>
#include <string>
#include <cmath>

/**
* This class is the parameters parser for class VoskTranscription.
*
* These are the used parameters:
* | Group name | Parameter name | Type   | Units | Default Value | Required | Description             | Notes |
* |:----------:|:--------------:|:------:|:-----:|:-------------:|:--------:|:-----------------------:|:-----:|
* | -          | modelPath      | string | -     | -             | 0        | path to model directory | -     |
* | -          | sampleRate     | float  | Hz    | 0             | 1        | audio sample rate       | -     |
* | -          | useGPU         | bool   | -     | 0             | 0        | use GPU (if supported)  | -     |
*
* The device can be launched by yarpdev using one of the following examples (with and without all optional parameters):
* \code{.unparsed}
* yarpdev --device VoskTranscription --modelPath <optional_value> --sampleRate 0 --useGPU 0
* \endcode
*
* \code{.unparsed}
* yarpdev --device VoskTranscription --sampleRate 0
* \endcode
*
*/

class VoskTranscription_ParamsParser : public yarp::dev::IDeviceDriverParams
{
public:
    VoskTranscription_ParamsParser();
    ~VoskTranscription_ParamsParser() override = default;

public:
    const std::string m_device_classname = {"VoskTranscription"};
    const std::string m_device_name = {"VoskTranscription"};
    bool m_parser_is_strict = false;
    struct parser_version_type
    {
         int major = 1;
         int minor = 0;
    };
    const parser_version_type m_parser_version = {};

    const std::string m_modelPath_defaultValue = {""};
    const std::string m_sampleRate_defaultValue = {"0"};
    const std::string m_useGPU_defaultValue = {"0"};

    std::string m_modelPath = {}; //This default value of this string is an empty string. It is highly recommended to provide a suggested value also for optional string parameters.
    float m_sampleRate = {0};
    bool m_useGPU = {0};

    bool          parseParams(const yarp::os::Searchable & config) override;
    std::string   getDeviceClassName() const override { return m_device_classname; }
    std::string   getDeviceName() const override { return m_device_name; }
    std::string   getDocumentationOfDeviceParams() const override;
    std::vector<std::string> getListOfParams() const override;
};

#endif
